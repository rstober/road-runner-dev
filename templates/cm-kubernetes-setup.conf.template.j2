#######################################################################
##  This config file should be used with cm-kubernetes-setup tool
##  Example:
##      cm-kubernetes-setup -c <filename>
##  
##  Generated by:
##      cm-kubernetes-setup
##      cm-setup-9.1-115665_cm9.1_c07205a875.x86_64
##      cmdline: /cm/local/apps/cm-setup/bin/cm-kubernetes-setup
##  Generate on host:
##      {{ ansible_hostname }}
##  Date of generation: 
##      Thu Oct 21 20:54:39 2021
##  MD5 checksum of everything after the closing comment: 
##      57b5c1167d005b8d8fd2962d25f59354
##      to compare:  grep -v '^##' <this_file> | md5sum 
#######################################################################
meta:
  command_line: /cm/local/apps/cm-setup/bin/cm-kubernetes-setup
  date: Thu Oct 21 20:54:39 2021
  generated_with: Kubernetes Setup
  hostname: {{ ansible_hostname }}
  package_name: cm-setup-9.1-115665_cm9.1_c07205a875.x86_64
  package_version: '1'
modules:
  docker:
    bridge_ip: ''
    configuration_overlay:
      categories:
      - {{ categories }}
      name: kube-default-worker
      nodes: []
    devicemapper:
      data_size: 100GB
      device: loopback
      meta_size: 2GB
    extra_options: []
    nvidia_container_runtime: true
    overlays_priority: 500
    packages:
    - cm-docker
    registry_mirrors: []
    skip_image_update: false
    skip_packages: false
    skip_reboot: false
    storage_backend: overlay2
  kubernetes:
    apiserver:
      admission_controllers:
      - NamespaceLifecycle
      - LimitRanger
      - ServiceAccount
      - DefaultStorageClass
      - DefaultTolerationSeconds
      - MutatingAdmissionWebhook
      - ValidatingAdmissionWebhook
      - ResourceQuota
      options:
      - --anonymous-auth=false
      - --feature-gates=RunAsGroup=true
      port: 6443
    apiserver_proxy:
      port: 10443
    bootstrap:
      enable: true
      group: system
      template_file: addons/bootstrap.yaml
    ca_certs:
      etcd:
        key: /cm/local/apps/etcd/var/etc/etcdca-kube-default.key
        pem: /cm/local/apps/etcd/var/etc/etcdca-kube-default.pem
      kube:
        key: /cm/local/apps/kubernetes/var/etc/kubeca-default.key
        pem: /cm/local/apps/kubernetes/var/etc/kubeca-default.pem
      sa:
        key: /cm/local/apps/kubernetes/var/etc/sa-default.key
        pem: /cm/local/apps/kubernetes/var/etc/sa-default.pem
    calico:
      enable: true
      excludes:
      - /etc/cni
      - /opt/cni
      - /run/calico
      - /var/lib/calico
      group: system
      template_file: addons/calico.yaml
    ceph:
      class_name: bright-ceph
      enable: false
      pool:
        min_size: 3
        name: ''
        pg_num: ''
        size: 3
    certs:
      etcdclient:
        key: /cm/local/apps/etcd/var/etc/client.key
        pem: /cm/local/apps/etcd/var/etc/client.pem
      kube:
        key: /cm/local/apps/kubernetes/var/etc/node.key
        pem: /cm/local/apps/kubernetes/var/etc/node.pem
        trusted_domains:
        - kubernetes
        - kubernetes.default
        - kubernetes.default.svc
        - master
        - localhost
    container_runtime: cm-docker
    container_runtime_packages:
      cm-docker:
      - cm-docker
      singularity-cri:
      - cm-singularity-cri
    controller:
      options: []
      port: 10252
    dashboard:
      enable: true
      group: system
      template_file: addons/dashboard.yaml
    dashboard_ingress:
      enable: true
      group: system
      template_file: addons/dashboard_ingress.yaml
    dns:
      enable: true
      group: system
      template_file: addons/dns.yaml
    etcd:
      cluster: kube-default
      configuration_overlay:
        name: kube-default-etcd
      nodes:
      - {{ ansible_hostname }}
      options: []
      packages:
      - cm-etcd
      spool_dir: /var/lib/etcd
    flannel:
      enable: false
      excludes:
      - /etc/cni/*
      - /run/flannel/*
      group: system
      template_file: addons/flannel.yaml
    ingress_controller:
      enable: true
      env:
        CM_KUBE_INGRESS_HTTPS_PORT:
          nodes_env: true
          value: '30443'
        CM_KUBE_INGRESS_HTTP_PORT:
          nodes_env: true
          value: '30080'
        ingress_controller_label:
          value: brightcomputing.com/ingress-controller
        replicas:
          value: '1'
      group: system
      nodes:
      - {{ ansible_hostname }}
      template_file: addons/ingress_controller.yaml
    kc:
      domain: cluster.local
      edge_site: ''
      external_api_access: true
      external_fqdn: {{ ansible_hostname }}.cloud.cluster
      name: default
      network_plugin: calico
      version: '1.18'
    kubeconfig:
      path: /cm/local/apps/kubernetes/var/etc/node.kubeconfig
      path_client: /cm/local/apps/kubernetes/var/etc/kubelet.kubeconfig
      template: templates/kubelet.kubeconfig
    kubernetes_ingress:
      enable: false
      group: system
      template_file: addons/kubernetes_ingress.yaml
    kubestatemetrics:
      enable: true
      group: system
      template_file: addons/kubestatemetrics.yaml
    master:
      configuration_overlay:
        name: kube-default-master
        priority: 510
      label: node-role.kubernetes.io/master
      nodes:
      - {{ ansible_hostname }}
      packages:
      - cm-kubernetes
      - nginx
      platform_specific_packages:
        redhat:
        - conntrack-tools
        - nginx-all-modules
        suse:
        - conntrack-tools
        ubuntu:
        - conntrack
    metrics_server:
      enable: true
      group: system
      template_file: addons/metrics_server.yaml
    modulefiles:
      etcd:
        template: templates/etcd.module
      kube:
        template: templates/kube.module
    networks:
      internal:
        name: vpc-0-private
      pod:
        base: 172.29.0.0
        bits: 16
        name: kube-default-pod
      service:
        base: 10.150.0.0
        bits: 16
        name: kube-default-service
    node:
      kubelet_port: 10250
      options:
      - --volume-stats-agg-period=0
    nvidia:
      enable: true
      env:
        gpu_accelerator_label:
          value: brightcomputing.com/gpu-accelerator
      group: system
      template_file: addons/nvidia.yaml
    proxy:
      health_port: 10256
      options: []
    psp:
      enable: true
      group: system
      template_file: templates/psp.yaml.jinja2
    psp_system:
      enable: true
      group: system
      template_file: templates/psp_system.yaml.jinja2
    roles:
      singularity-cri:
        kind: generic
        services:
        - sycri.service
    root:
      enable: true
      group: system
      template_file: addons/root.yaml
    scheduler:
      options: []
      port: 10253
    security:
      apparmor: false
      psp: true
    skip_image_update: false
    skip_packages: false
    skip_reboot: false
    user:
      additional_namespace: templates/additional_namespace.yaml.jinja2
      kind: RoleBinding
      role: edit
      secure_namespace: templates/secure_namespace.yaml.jinja2
      user_bindings: templates/user_bindings.yaml.jinja2
    worker:
      categories:
      - {{ categories }}
      configuration_overlay:
        name: kube-default-worker
        priority: 500
      nodes: []
      packages:
      - cm-kubernetes
      - nginx
      platform_specific_packages:
        redhat:
        - conntrack-tools
        - nginx-all-modules
        suse:
        - conntrack-tools
        ubuntu:
        - conntrack
